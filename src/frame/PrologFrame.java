/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frame;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextPane;

import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.BadLocationException;
import logica.Unificacao;

import sintaxe.SintaticoAux;
import sintaxe.mySintaxe;
import sintaxe.sintaxeBeans;

/**
 *
 * @author RCotez
 */
public class PrologFrame extends javax.swing.JFrame {

    boolean baseConhecimento = false;

    final String nBase = "Selecione Base de Conhecimento ";
    final String nao = "Não ";
    final String selecionada = "Selecionada! ";
    final String consulta = "Consulta";
    File selectedFile = null;

    Font fon = new Font("Verdana", Font.BOLD, 11);

    /**
     * Creates new form Prolog
     */
    public PrologFrame() {
        initComponents();

        if (baseConhecimento == false) {
            jLabel1.setText(nBase);
            jTextArea2.setEditable(baseConhecimento);
            Color color = new Color(219, 219, 219);
            jTextArea2.setBackground(color);

        }
        jLabel2.setText(consulta);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuArquivos = new javax.swing.JMenu();
        jNovo = new javax.swing.JMenuItem();
        jAbrirArq = new javax.swing.JMenuItem();
        jSair = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(500, 550));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTextArea2ComponentAdded(evt);
            }
        });
        jTextArea2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea2KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextArea2KeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTextArea2);

        jLabel2.setText("jLabel2");

        jMenuArquivos.setText("Arquivos");

        jNovo.setText("Abrir BC");
        jNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNovoActionPerformed(evt);
            }
        });
        jMenuArquivos.add(jNovo);

        jAbrirArq.setText("Salvar BC");
        jAbrirArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAbrirArqActionPerformed(evt);
            }
        });
        jMenuArquivos.add(jAbrirArq);

        jSair.setText("Sair");
        jSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSairActionPerformed(evt);
            }
        });
        jMenuArquivos.add(jSair);

        jMenuBar1.add(jMenuArquivos);

        jMenu2.setText("Sobre");

        jSobre.setText("Informações ");
        jSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSobreActionPerformed(evt);
            }
        });
        jMenu2.add(jSobre);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 457, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAbrirArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAbrirArqActionPerformed
        // TODO add your handling code here:    

        if (jTextArea1.getText() != null) {
            JFileChooser salvandoArquivo = new JFileChooser();
            File nomeDoArquivo = new File("teste.txt");
            salvandoArquivo.setAcceptAllFileFilterUsed(false);
            FileFilter extensao = new FileNameExtensionFilter("Arquivo txt", "txt");
            salvandoArquivo.addChoosableFileFilter(extensao);

            try {
                boolean criaArquivo = nomeDoArquivo.createNewFile();
                int resultado = salvandoArquivo.showSaveDialog(null);

                if (resultado == JFileChooser.APPROVE_OPTION) {
                    File salvarArquivoEscolhido = salvandoArquivo.getSelectedFile();
                    FileWriter fw = new FileWriter(salvarArquivoEscolhido + ".txt");

                    String tx = jTextArea1.getText();
                    PrintWriter gravarArq = new PrintWriter(fw);
                    gravarArq.println(tx);
                    gravarArq.close();
                }
            } catch (IOException e) {
                jTextArea1.append(e.getMessage());
            }
        }
        /*  JFileChooser fc = new JFileChooser();
        fc.setAcceptAllFileFilterUsed(false);// remove o filtro default
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo TxT", "txt"); // filtros
        fc.setFileFilter(filter);// seta o filtro
        Component MainScreen = null;
        int result = fc.showOpenDialog(MainScreen); //Abre o janela para seleção. 

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fc.getSelectedFile();// get patch
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
        }
         */

 /*   try{
        FileWriter fw = new FileWriter(selectedFile, true);
        
        String tx = jTextArea1.getText();
        PrintWriter gravarArq = new PrintWriter(tx);
        gravarArq.println();       
        gravarArq.close();     
       }catch(IOException e){
           jTextArea1.append(e.getMessage());
       }
        
        }
         */
    }//GEN-LAST:event_jAbrirArqActionPerformed

    private void jSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSobreActionPerformed
        // TODO add your handling code here:
        JFrame fl = new JFrame();
        JTextPane tx = new JTextPane();

        JPanel nr = new JPanel();
        fl.setSize(250, 250);
        nr.setBackground(Color.white);
        fl.setTitle("Sobre");
        tx.setText(" Fundação Santo André, " + "\n" + "\n" + "--->   Prolog   <---" + "\n" + "\n" + "Grupo  :" + "\n" + "Renan Cortez Evangelista   Ra:709896" + "\n"
                + "Alan Bertoldo   Ra;709896" + "\n" + "Giuliana Panotim   Ra:709896");
        tx.setEditable(false);
        fl.add(nr);
        nr.add(tx);
        // fl.add(lb);
        fl.setVisible(true);


    }//GEN-LAST:event_jSobreActionPerformed


    private void jNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNovoActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setAcceptAllFileFilterUsed(false);// remove o filtro default
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Arquivo TxT", "txt"); // filtros
        fc.setFileFilter(filter);// seta o filtro
        Component MainScreen = null;
        int result = fc.showOpenDialog(MainScreen); //Abre o janela para seleção. 

        if (result == JFileChooser.APPROVE_OPTION) {
            selectedFile = fc.getSelectedFile();// get patch
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            jLabel1.setText("Base de Conhecimento : " + selectedFile.getName());

            try {
                ler();
            } catch (IOException ex) {
                Logger.getLogger(PrologFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextArea2.setEditable(true);
            jTextArea2.setBackground(Color.white);
            // newLine();
        }

    }//GEN-LAST:event_jNovoActionPerformed


    private void jSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSairActionPerformed
        System.exit(0);

    }//GEN-LAST:event_jSairActionPerformed

    private void jTextArea2ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTextArea2ComponentAdded
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextArea2ComponentAdded

    int posicaoCursor = 0;

    private void jTextArea2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyPressed
        // TODO add your handling code here:
        //  String jConsulta = jTextArea2.getText();
        AnalisaLine();

        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            jLabel3.setText("");
            int posicaoCursor = jTextArea2.getLineCount();
            //  = new String[posicaoCursor-1];
            String consult;
            String baseconhe;
            consult = jTextArea2.getText();
            baseconhe = jTextArea1.getText();
            
           
            String consulta[] = consult.split("\n");
            String bc[] = baseconhe.split("\n");
            
            System.out.println(Arrays.toString(consulta));
            
            int line = jTextArea1.getLineCount()-1;
             int aux=0;
     while(line>=aux){ 
            mySintaxe sintaxe = new mySintaxe();
            mySintaxe sintaxe1 = new mySintaxe();
            Unificacao nf = new Unificacao();
           // sintaxeBeans d = new sintaxeBeans();
           
           for(String g : consulta){    System.out.println(g);}
            String[] fbf;           
           
       
    
             try{
            String bctmp = bc[aux]; 
          
            
               
            String[] fbfConsul;
            List<sintaxeBeans> consul = sintaxe1.analisador(consult);
            String[] simboloCon = new String[consul.size() + 1];// Obtem a tokens   
            fbfConsul = new String[consul.size() + 1];              // Obetem o Tipo  
            int j = 0;
            for (sintaxeBeans g : consul) {
                fbfConsul[j] = String.valueOf(g.getType()); //Qualifico para unificação 
                simboloCon[j] = String.valueOf(g.getToken());
             // System.out.println("Tela111:" + simboloCon[j] + "p" + j);
                j++;
            }
            
            //primeira linha 
            List<sintaxeBeans> base = sintaxe.analisador(bctmp);
            String[] simbolo = new String[base.size() + 1];// Obtem a tokens   
            fbf = new String[base.size() + 1];              // Obetem o Tipo  
            int i = 0;
            for (sintaxeBeans f : base) {
                fbf[i] = String.valueOf(f.getType()); //Qualifico para unificação 
                simbolo[i] = String.valueOf(f.getToken());
              //  System.out.println("Tela->>>>:" + simbolo[i] + "p" + i);
                i++;
            }
            
            
           Unificacao unificar = new Unificacao();
            unificar.funcaoUnificar(fbf,simbolo,fbfConsul,simboloCon);
     }catch(Exception e){}
            aux++;
     
     
        
     }
     
        }
    }//GEN-LAST:event_jTextArea2KeyPressed

    private void jTextArea2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea2KeyTyped
        // TODO add your handling code here:


    }//GEN-LAST:event_jTextArea2KeyTyped
    private void AnalisaLine() {
        String linha = null;
        String teste = "amigo(jaao,maria).";
        boolean allRec = true;

        String[] fbf;

        Scanner scan = new Scanner(jTextArea2.getText()); // le a entrada digitado campo de consulta er analisa 
        while (scan.hasNextLine()) {
            linha = scan.nextLine();
        }

       // System.out.println("linha : " + linha);
        scan.close();

        mySintaxe sintaxe = new mySintaxe();
        

        List<sintaxeBeans> send = sintaxe.analisador(linha);
        String[] simbolo = new String[send.size() + 1];// Obtem a tokens   
        fbf = new String[send.size() + 1];              // Obetem o Tipo  
        int i = 0;
        for (sintaxeBeans g : send) {
            fbf[i] = String.valueOf(g.getType());
            simbolo[i] = String.valueOf(g.getToken());
          //  System.out.println("Tela:" + simbolo[i] + "p" + i);
            i++;
        }

        for (int f = 0; f <= fbf.length - 2; f++) {
            System.out.println("" + f);
            if (fbf[f].contains("NReconhecido")) {
                System.out.println("Não unificavel");
                allRec = false;
                jLabel3.setText("Não reconhecido ->" + simbolo[f]);
            }
        }

        if (allRec) {
            SintaticoAux sin = new SintaticoAux(fbf);
        }

    }

    public void setLabelExpect(String set) {
       // System.out.println("MOSTRAR:" + set);
        jLabel3.setText(set);
    }
    boolean unificacao = true;

    public void ler() throws FileNotFoundException, IOException {
        FileReader arq = new FileReader(selectedFile);
        BufferedReader text = new BufferedReader(arq);
        String conteudo;
        String linha = text.readLine();
        // logica(linha);

        while (linha != null) {

            // jTextArea1.setText(linha);                          
            conteudo = linha;
            linha = text.readLine();
            jTextArea1.append(conteudo + "\n");
            
        }

        arq.close();
        text.close();

        String baseconhe;
        baseconhe = jTextArea1.getText();
        String bc[] = baseconhe.split("\n");
        for (String temp : bc) {

            logica(temp);
        }

    }

    public void logica(String test) {

        if (test != null) {
            //  System.out.println(test);
            //String test = "amigo(jaao,maria).";
            boolean allRec = true;
            boolean aux = false;

            mySintaxe sintaxe = new mySintaxe();
            sintaxeBeans d = new sintaxeBeans();
            JFrame frame = new JFrame();
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            String[] fbf;
            String funcao = "";

            List<sintaxeBeans> send = sintaxe.analisador(test);
            DefaultTableModel defTableModel = new DefaultTableModel();
            String[] gf = new String[send.size()];
            fbf = new String[send.size()];
            int i = 0;
            for (sintaxeBeans g : send) {
                System.out.println("Analisador: " + "(" + g.getType() + "," + g.getToken() + "," + g.getPosition() + ")");
                defTableModel.addColumn(g.getType());
                gf[i] = g.getToken();
                fbf[i] = g.getType();
                i++;
            }

            defTableModel.insertRow(0, gf);
            Color color = new Color(163, 209, 248);
            Font font = new Font("TimesRoman", Font.BOLD, 15);
            JTable table = new JTable();
            table.setFont(font);
            table.setEnabled(false);
            table.getAutoResizeMode();
            table.setBackground(color);
            table.setModel(defTableModel);
            JScrollPane scrollPane = new JScrollPane(table);
            frame.add(scrollPane, BorderLayout.CENTER);
            frame.setSize(300, 150);
            frame.setVisible(true);

            // table.setBackground(Color.red);
            //<PREDICADO><PE>((<CONSTANTE>|<VARIAVEL>|funcao())+<V>)<PD><PT>     
            for (int f = 0; f <= fbf.length - 1; f++) {
                if (fbf[f].contains("NReconhecido")) {
                    System.out.println("Não unificavel Caracter não reconhecido: " + gf[f]);
                    allRec = false;

                }
            }

            if (allRec) {
                // Verificar se é a base de reconhecimento é uam FBF; 
                // somente se a base de conhecimento estiver sido toda reconhecida 
                //caso for reconhecida(nao possuir caracter não esperado) 
                SintaticoAux sin = new SintaticoAux(fbf);
            }

        }
    }

    JFrame c;

    public void frame(JFrame cc) {
        this.c = cc;

    }
    
    public void alterarTextoLabel(String texto){       
        jLabel3.setText(texto);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrologFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrologFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrologFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrologFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrologFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem jAbrirArq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenuArquivos;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jNovo;
    private javax.swing.JMenuItem jSair;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuItem jSobre;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
